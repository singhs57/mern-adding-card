{"ast":null,"code":"var _jsxFileName = \"I:\\\\CRUD_Adding_Card\\\\app_client\\\\src\\\\Posts\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useStyles from \"./styles\";\nimport Post from \"./Post/Post\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\"; //we can fetch data from global redux store using useSelector\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = ({\n  setCurrentId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const posts = useSelector(state => state.posts); //as a parameter in this call back function we get access to whole global redux store.\n  //why state.posts ? :- if we got to reducers, inside combineReducers we have pass all the reducers as posts.\n\n  console.log(posts);\n  return !posts.length ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.mainContainer,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    children: posts.map((post //in a map we will get a individual post and for each individual post we will return something\n    ) =>\n    /*#__PURE__*/\n    _jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        post: post // as we are mapping with our real posts now so we can send that individual value of post to each post compont.\n        ,\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"F9Wbrs57k8dWxLdl+shJexdyyGk=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["I:/CRUD_Adding_Card/app_client/src/Posts/Posts.js"],"names":["React","useStyles","Post","Grid","CircularProgress","useSelector","Posts","setCurrentId","classes","posts","state","console","log","length","mainContainer","map","post","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAA2C;;;;AAE3C,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AAClC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,KAAK,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB,CAFkC,CAEiB;AACnD;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SAAO,CAACA,KAAK,CAACI,MAAP,gBACL,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,IAAD;AACE,IAAA,SAAS,EAAEL,OAAO,CAACM,aADrB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,OAAO,EAAE,CAJX;AAAA,cAMGL,KAAK,CAACM,GAAN,CAAU,CACTC,IADS,CACJ;AADI;AAAA;AAGT,YAAC,IAAD;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAkC,MAAA,EAAE,EAAE,CAAtC;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,IAAI,EAAEA,IADR,CACc;AADd;AAEE,QAAA,YAAY,EAAET;AAFhB;AAAA;AAAA;AAAA;AAAA;AADF,OAAWS,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,YAHD;AANH;AAAA;AAAA;AAAA;AAAA,UAHF;AAsBD,CA3BD;;GAAMX,K;UACYL,S,EACFI,W;;;KAFVC,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport useStyles from \"./styles\";\r\nimport Post from \"./Post/Post\";\r\nimport { Grid, CircularProgress } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\"; //we can fetch data from global redux store using useSelector\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n  const classes = useStyles();\r\n  const posts = useSelector((state) => state.posts); //as a parameter in this call back function we get access to whole global redux store.\r\n  //why state.posts ? :- if we got to reducers, inside combineReducers we have pass all the reducers as posts.\r\n  console.log(posts);\r\n  return !posts.length ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <Grid\r\n      className={classes.mainContainer}\r\n      container\r\n      alignItems=\"stretch\"\r\n      spacing={3}\r\n    >\r\n      {posts.map((\r\n        post //in a map we will get a individual post and for each individual post we will return something\r\n      ) => (\r\n        <Grid key={post._id} item xs={12} sm={6}>\r\n          <Post\r\n            post={post} // as we are mapping with our real posts now so we can send that individual value of post to each post compont.\r\n            setCurrentId={setCurrentId}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      {/* {passing post and setCurrentID as a props to <Post/> component} */}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}